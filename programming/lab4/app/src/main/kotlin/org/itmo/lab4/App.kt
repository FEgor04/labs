/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.itmo.lab4

import org.itmo.lab4.characters.Character
import org.itmo.lab4.characters.Donut
import org.itmo.lab4.characters.Dunno
import org.itmo.lab4.exceptions.CantSleepException
import org.itmo.lab4.exceptions.NoCrewMemberException
import org.itmo.lab4.look.looker.Illuminator
import org.itmo.lab4.planets.Moon
import org.itmo.lab4.scare.Scareable
import org.itmo.lab4.scare.Scary
import org.itmo.lab4.spaceships.Spaceship
import org.itmo.lab4.spaceships.rocket.Rocket
import org.itmo.lab4.spaceships.rocket.engine.IEngine
import org.itmo.lab4.spaceships.rocket.engine.JetEngine
import org.kodein.di.DI
import org.kodein.di.bindSingleton
import org.kodein.di.instance

/**
Приняв такую позу, Незнайка стал делать попытки заснуть.
Некоторое время он прислушивался к плавному шуму реактивного двигателя.
Ему казалось, что двигатель потихоньку шепчет ему на ухо: "Чаф-чафчаф-чаф!" Эти звуки постепенно убаюкали Незнайку, и он заснул.
Прошло несколько часов, и Незнайка почувствовал, что его кто-то тормошит за плечо.
Открыв глаза, он увидел Пончика.
Друзья поднялись в астрономическую кабину и взглянули в верхний иллюминатор.
То, что они увидели, ошеломило их.
Огромный светящийся шар висел над ракетой, заслоняя небо со звездами.
Пончик напугался до того, что у него затряслись и губы, и щеки, и даже уши, а из глаз потекли слезы.
Незнайка поднялся под потолок кабины и, прильнув к верхнему иллюминатору, принялся разглядывать поверхность Луны.
Теперь Луна была видна так, как бывает видна в телескоп с Земли, и даже лучше.
На ее поверхности вполне хорошо можно было разглядеть и горные цепи, и лунные цирки, и глубокие трещины или разломы.
Пончик нехотя поднялся кверху и стал исподлобья поглядывать в иллюминатор.
То, что он увидел, не принесло ему облегчения.
Он заметил, что Луна теперь не стояла на месте, а приближалась с заметной скоростью.
Сначала она была видна как огромный, величиной с полнеба, сверкающий круг.
Мало-помалу этот круг разрастался и в конце концов заполнил собой все небо.
Теперь, куда ни глянь, во все стороны простиралась поверхность Луны с
опрокинутыми вверх ногами горными цепями, лунными кратерами и долинами.
Все это угрожающе висело над головой и было уже так близко, что казалось, стоит только протянуть руку,
и можно потрогать верхушку какой-нибудь лунной горы.
Пончик боязливо поежился и, оттолкнувшись рукой от иллюминатора, опустился на дно кабины.
Незнайка и сам не знал, как произойдет посадка на Луну, но ему хотелось показать Пончику, будто он все хорошо знает.
Поэтому он сказал:
  */
fun main() {
    val kodein = DI {
        bindSingleton<Moon> { Moon() }
        bindSingleton<Dunno> { Dunno() }
        bindSingleton<Donut> { Donut() }
        bindSingleton<Illuminator> { Illuminator() }
        bindSingleton<IEngine> {JetEngine()}
    }

    class RocketCreator { // Локальный класс
        fun create(): Spaceship {
            val dunno: Dunno by kodein.instance()
            val donut: Donut by kodein.instance()
            val illuminator: Illuminator by kodein.instance()
            val engine: IEngine by kodein.instance()

            return Rocket(arrayOf(dunno, donut), 1500.0, illuminator, engine)
        }
    }

    val moon: Moon by kodein.instance()
    val rocket: Spaceship = RocketCreator().create()
    val dunno = rocket.getCrew().getMember(0)
    val donut = rocket.getCrew().getMember(1)

    /** Демонстрация unchecked exception, я не придумал ничего лучше */
    try {
        rocket.getCrew().getMember(2)
    }
    catch (e: NoCrewMemberException) {
        println("В экипаже нет чела с индексом ${e.i}")
    }

    try {
        dunno.tryToSleep()
    }
    catch(e: CantSleepException) {
        print("$dunno не может уснуть. Причина: ${e.message}\n")
    }
    dunno.listenTo(rocket.getEngine())
    rocket.getEngine().lull(dunno)

    try {
        dunno.tryToSleep()
    }
    catch (e: CantSleepException) {
        println("$dunno не может уснуть. Причина: ${e.message}")
    }

    donut.bother(dunno)
    donut.goToCabin()
    dunno.goToCabin()


    val giantLightBall: Scary = object: Scary { /* Анонимный класс */
        override fun scare(scareable: Scareable) {
            scareable.beScared("Огромный светящийся шар")
        }
    }
    giantLightBall.scare(donut)

    dunno.getUp()
    dunno.look(rocket.getIlluminator(), moon)
    donut.getUp()
    donut.look(rocket.getIlluminator(), moon)
    donut.modifyRelief(0.0);
    println("Скорость сближения с луной: ${rocket.calcApproachSpeed(moon)}")
    println("Относительный размер Луны на небе: ${moon.getSizeComparedToSky()}")
    println("Относительный размер Луны на небе: ${moon.getSizeComparedToSky()}")
    println("Вокруг видно: ${rocket.getIlluminator().getSeenObjects(moon)}")
    donut.getDown()
    dunno.say("")
}
