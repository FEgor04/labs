/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id("lab8.kotlin-common-conventions")
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

tasks.register<Jar>("fatJar") {
    dependsOn.addAll(listOf("compileJava", "compileKotlin", "processResources", "build")) // We need this for Gradle optimization to work
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    destinationDirectory.set(File("../target/"))
    manifest { attributes(mapOf("Main-Class" to application.mainClass)) } // Provided we set it up in the application plugin configuration
    val sourcesMain = sourceSets.main.get()
    val contents = configurations.runtimeClasspath.get()
        .map { if (it.isDirectory) it else zipTree(it) } +
            sourcesMain.output
    from(contents)
}
//
//tasks.named("build") {
//    finalizedBy("fatJar")
//}
