/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package lab5

import lab5.cli.CLIHandler
import lab5.repositories.VehicleRepository
import lab5.repositories.csv.VehicleCsvRepository
import java.io.File
import java.io.FileNotFoundException

fun main() {
    val reader = System.`in`.bufferedReader()
    val writer = System.out.bufferedWriter()

    val filename = System.getenv("FILENAME")
    val file: File? = if (filename.isNullOrEmpty()) {
        writer.write("Переменная окружения FILENAME не указана. Данные загружены не будут.\n")
        writer.flush()
        null
    } else {
        File(filename)
    }
    val repository: VehicleRepository = VehicleCsvRepository(file)
    if (file != null && file.exists()) {
        try {
            repository.loadData()
        }
         catch (e: Exception) {
            when(e) {
                is FileNotFoundException -> {
                    writer.write("Нет файла $file или он недоступен для записи: $e\n")
                }
                is SecurityException -> {
                    writer.write("Недостаточно прав чтобы открыть файл $file: $e\n")
                }
                else -> {
                    writer.write("Не удалось загрузить данные из файла. Ошибка: $e\n")
                }
            }
            writer.flush()
        }
    } else {
        writer.write("Файла не существует.\n")
        writer.flush()
    }


    val handler = CLIHandler(repository)

    handler.start(reader, writer)
}
