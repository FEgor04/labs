/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.3/samples
 */

plugins {
    id("java")
    kotlin("jvm") version "1.9.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.10"
    id("org.jetbrains.kotlin.plugin.noarg") version "1.9.10"
    kotlin("plugin.serialization") version "1.9.10"
    id("war")
}

group = "com.efedorov"
version = "1.0.0"

repositories {
    mavenCentral()
}

val junitVersion = "5.9.2"

dependencies {
    compileOnly("jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.0")
    compileOnly("jakarta.faces:jakarta.faces-api:3.0.0")
    compileOnly("jakarta.servlet:jakarta.servlet-api:5.0.0")
    implementation("org.hibernate:hibernate-core:6.0.2.Final")
    implementation("org.glassfish.jaxb:jaxb-runtime:3.0.2")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation("org.postgresql:postgresql:42.6.0")

    // https://mvnrepository.com/artifact/org.primefaces/primefaces
    implementation("org.primefaces", "primefaces", "13.0.1", "", "jakarta")

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation("org.slf4j:slf4j-api:2.0.9")

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")
}


allOpen {
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

noArg {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

java {
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

war {
}

tasks.test {
    useJUnitPlatform()
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}
